{
  "github.copilot.chat.commitMessageGeneration.instructions": "Generate commit messages following the Conventional Commits standard (https://www.conventionalcommits.org/). Each commit message should have the structure: <type>[optional scope][optional !]: <description>\n\nCommit Types and Their Usage:\n- build: Use for changes that affect the build system or external dependencies (e.g., gulp, npm, webpack)\n- ci: Use for changes to CI configuration files and scripts (e.g., GitHub Actions, Travis, Circle CI)\n- chore: Use for changes which don't modify source code or tests (e.g., updating build tasks, package manager configs)\n- docs: Use for documentation only changes\n- feat: Use for new features or functionality additions\n- fix: Use for bug fixes\n- perf: Use for code changes that improve performance\n- refactor: Use for code changes that neither fix bugs nor add features\n- revert: Use when reverting previous commits\n- style: Use for changes that do not affect the meaning of the code (e.g., formatting, missing semicolons)\n- test: Use for adding or correcting tests\n\nCommit Structure Guidelines:\n1. Type: Always lowercase (e.g., feat, fix)\n2. Scope: Optional, in parentheses, describing the section of codebase (e.g., feat(api), fix(auth))\n3. Breaking Change: Add ! after type/scope for breaking changes (e.g., feat!, feat(api)!)\n4. Description: Short, imperative, present tense description\n5. Body: Optional, separated by a blank line, explaining motivation and context\n6. Footer: Optional, may contain references to issues or breaking change notices\n\nExamples:\n- feat: add user authentication\n- fix(login): resolve session timeout issue\n- feat(api)!: rework user endpoints\n- chore(deps): update dependencies\n- docs: improve installation instructions\n\nReminders:\n- Put a newline before extended commit body\n- Use imperative mood in the description ('add' not 'added')\n- Description should not end with a period\n- Keep the first line under 72 characters\n- Explain 'what' and 'why' in the body, not 'how'\n- Reference issues in footer using 'fixes #123' or 'closes #456'\n\nGenerate complete, concise commit messages based on the changes provided, following these conventions strictly."
}